apiVersion: v1
data:
  values: |
    global:
      podSecurityStandards:
        enforced: true
      providerSpecific:
        region: {{ .Values.aws.region }}
      connectivity:
        baseDomain: {{ .Values.cluster.baseDomain }}
        availabilityZoneUsageLimit: 3
        dns:
          mode: {{ .Values.cluster.dnsMode }}
        subnets:
          - cidrBlocks:
              - cidr: 10.255.0.0/20
                availabilityZone: a
              - cidr: 10.255.16.0/20
                availabilityZone: b
              - cidr: 10.255.32.0/20
                availabilityZone: c
            isPublic: true
          - cidrBlocks:
              - cidr: 10.255.64.0/18
                availabilityZone: a
              - cidr: 10.255.128.0/18
                availabilityZone: b
              - cidr: 10.255.192.0/18
                availabilityZone: c
            isPublic: false
        topology:
          mode: GiantSwarmManaged
        network:
          vpcCidr: {{ .Values.cluster.vpcCIDR }}
        proxy:
          enabled: false
      metadata:
        name: {{ .Values.cluster.name }}
        organization: {{ .Values.cluster.organization }}
      nodePools:
        def00:
          instanceType: r6i.xlarge
          maxSize: 2
          minSize: 2
          availabilityZones: {{- .Values.aws.azs | toYaml | nindent 10 }}
          rootVolumeSizeGB: 100
kind: ConfigMap
metadata:
  labels:
    giantswarm.io/cluster: {{ .Values.cluster.name }}
    {{- include "labels.common" $ | nindent 4 }}
  name: {{ .Values.cluster.name }}-userconfig
  namespace: {{ $.Release.Namespace }}
---
apiVersion: application.giantswarm.io/v1alpha1
kind: App
metadata:
  annotations:
    chart-operator.giantswarm.io/force-helm-upgrade: "yes"
  labels:
    app-operator.giantswarm.io/version: 0.0.0
    giantswarm.io/cluster: {{ .Values.cluster.name }}
    {{- include "labels.common" $ | nindent 4 }}
  name: {{ .Values.cluster.name }}
  namespace: {{ $.Release.Namespace }}
spec:
  catalog: cluster
  name: cluster-aws
  namespace: {{ $.Release.Namespace }}
  kubeConfig:
    context:
      name: ""
    inCluster: true
    secret:
      name: ""
      namespace: ""
  userConfig:
    configMap:
      name: {{ .Values.cluster.name }}-userconfig
      namespace: {{ $.Release.Namespace }}
  version: {{ .Values.cluster.version }}
---
apiVersion: v1
data:
  values: |
    clusterName: {{ .Values.cluster.name }}
    organization: {{ .Values.cluster.organization }}
    deleteOptions:
      moveAppsHelmOwnershipToClusterAws: {{ .Values.apps.deleteOptions.moveAppsHelmOwnershipToClusterAws }}
    {{- if ne .Values.apps.cilliumApiEndpoint "" }}
    userConfig:
      cilium:
        configMap:
          values: |
            ipam:
              mode: kubernetes
            k8sServiceHost: {{ .Values.apps.cilliumApiEndpoint }}
            k8sServicePort: 6443
            kubeProxyReplacement: strict
            hubble:
              relay:
                enabled: true
            defaultPolicies:
              enabled: true
              tolerations:
              - effect: NoSchedule
                operator: Exists
              - effect: NoExecute
                operator: Exists
              - key: CriticalAddonsOnly
                operator: Exists
    {{- end }}
kind: ConfigMap
metadata:
  labels:
    {{- include "labels.common" $ | nindent 4 }}
    giantswarm.io/cluster: {{ .Values.cluster.name }}
  name: {{ .Values.cluster.name }}-default-apps-userconfig
  namespace: {{ $.Release.Namespace }}
---
apiVersion: application.giantswarm.io/v1alpha1
kind: App
metadata:
  labels:
    app-operator.giantswarm.io/version: 0.0.0
    giantswarm.io/cluster: {{ .Values.cluster.name }}
    {{- include "labels.common" $ | nindent 4 }}
  name: {{ .Values.cluster.name }}-default-apps
  namespace: {{ $.Release.Namespace }}
spec:
  catalog: cluster
  config:
    configMap:
      name: {{ .Values.cluster.name }}-cluster-values
      namespace: {{ $.Release.Namespace }}
  kubeConfig:
    context:
      name: ""
    inCluster: true
    secret:
      name: ""
      namespace: ""
  name: default-apps-aws
  namespace: {{ $.Release.Namespace }}
  userConfig:
    configMap:
      name: {{ .Values.cluster.name }}-default-apps-userconfig
      namespace: {{ $.Release.Namespace }}
  version: {{ .Values.apps.version }}
---
apiVersion: v1
data:
  values: |
    {{- if ne .Values.cluster.baseDomain "" }}
    baseDomain: "{{ .Values.cluster.baseDomain }}"
    {{- end }}
    controller:
      service:
        public: false
    provider: "capa"
    image:
       name: "{{ .Values.proxy.image }}"
       tag: "{{ .Values.proxy.tag }}"
kind: ConfigMap
metadata:
  labels:
    {{- include "labels.common" $ | nindent 4 }}
    giantswarm.io/cluster: {{ .Values.cluster.name }}
  name: {{ .Values.cluster.name }}-squid-userconfig
  namespace: {{ $.Release.Namespace }}
---
apiVersion: application.giantswarm.io/v1alpha1
kind: App
metadata:
  annotations:
    chart-operator.giantswarm.io/force-helm-upgrade: "false"
  labels:
    {{- include "labels.common" $ | nindent 4 }}
    giantswarm.io/cluster: {{ .Values.cluster.name }}
  name: {{ .Values.cluster.name }}-squid
  namespace: {{ $.Release.Namespace }}
spec:
  catalog: giantswarm-playground
  kubeConfig:
    context:
      name: {{ .Values.cluster.name }}-admin@{{ .Values.cluster.name }}
    inCluster: false
    secret:
      name: {{ .Values.cluster.name }}-kubeconfig
      namespace: {{ $.Release.Namespace }}
  name: squid-proxy
  namespace: kube-system
  userConfig:
    configMap:
      name: {{ .Values.cluster.name }}-squid-userconfig
      namespace: {{ $.Release.Namespace }}
  version: {{ .Values.proxy.version }}
